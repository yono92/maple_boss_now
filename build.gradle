plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.github.node-gradle.node' version '7.0.0' // Node 플러그인 추가
}

group = 'com.maple'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// 스프링 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// OAuth2 클라이언트
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// 레디스
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'


	// 추가: JJWT dependencies
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// MySQL dependencies
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	// Lombok dependencies
	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	testCompileOnly 'org.projectlombok:lombok:1.18.32'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
}

node {
	version = '20.11.0'
	npmVersion = '10.2.4'
	download = true
}

task installTailwind(type: NpmTask) {
	description = "Install Tailwind CSS and its dependencies"
	args = ['install']
}

task buildTailwind(type: NpmTask) {
	description = "Build Tailwind CSS"
	args = ['run', 'build:css']
	dependsOn installTailwind
}


tasks.named('test') {
	useJUnitPlatform()
}
